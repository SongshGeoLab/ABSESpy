[tool.pytest.ini_options]
testpaths = ["tests"]
norecursedirs = ["examples", "docs", ".*", "tmp", "out", "logs"]
addopts = "-v --tb=short --cov=abses"

[tool.isort]
profile = "black"
line_length = 79

[project]
name = "abses"
version = "0.9.0"
description = "ABSESpy makes it easier to build artificial Social-ecological systems with real GeoSpatial datasets and fully incorporate human behaviour."
authors = [{name = "Shuang Song", email = "songshgeo@gmail.com"}]
license = {text = "Apache 2.0 License"}
readme = "README.md"
requires-python = ">=3.11,<3.14"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "netcdf4>=1.6",
    "hydra-core>=1.3,<1.4",
    "mesa>=3.1.0",
    "mesa-geo>=0.9.1",
    "xarray>=2023",
    "fiona>1.8",
    "loguru>=0.7",
    "rioxarray>=0.13",
    "pendulum>=3.0.0",
    "geopandas>=0,<1",
    "typing-extensions>=4,<5",
    "fontawesome>=5",
    "seaborn>=0.13",
    "geocube>=0.5.0",
    "numpy<2",
    "urllib3",
    "icons",
    "solara",
    "mkdocs>=1.6.1",
    # Note: mkdocs-material-insiders requires authentication and MUST NOT be declared here
    # to avoid build backend variable expansion errors (e.g. Unknown context field).
    # Install locally via environment variable before building docs, e.g.:
    #   export MKDOCS_INSIDER=your_token
    #   uv pip install "git+https://${MKDOCS_INSIDER}@github.com/squidfunk/mkdocs-material-insiders.git"
    "mkdocs-jupyter>=0.25.1",
    "mkdocstrings>=0.30.1",
    "mkdocs-static-i18n>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/SongshGeoLab/ABSESpy"
Documentation = "https://absespy.github.io/ABSESpy/"
Repository = "https://github.com/SongshGeoLab/ABSESpy"

[project.entry-points."hydra.searchpath"]
abses = "hydra_plugins.abses_searchpath_plugin:ABSESpySearchPathPlugin"

[dependency-groups]
dev = [
    "ruff>=0.1.0",
    "pytest-clarity",
    "pre-commit>=3.0.1",
    "scriv>=1.2.0",
    "pytest>=7.2.1",
    "sourcery>=1.0.6",
    "allure-pytest>=2.13.2",
    "pytest-sugar>=0.9.7",
    "ipykernel>=6.25.1",
    "jupyterlab>=4.0.5",
    "jupyterlab-execute-time>=3.0.1",
    "matplotlib>=3.7.2",
    "pytest-cov>=4.1.0",
    "flake8>=6.1.0",
    "isort>=5.12.0",
    "nbstripout>=0.6.2",
    "pydocstyle>=6.3.0",
    "pre-commit-hooks>=4.4.0",
    "interrogate>=1.5.0",
    "mypy>=1.6.1",
    "bandit>=1.7.5",
    "black>=23.9.1",
    "pylint>=3.0.1",
    "tox>=4.11.3",
    "lxml>=5.2.1",
    "griffe>=1.14.0",
    # Docs dependencies
    "mkdocs>=1.5.3",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "mkdocs-minify-plugin>=0.7.1",
    "mkdocs-redirects>=1.2.1",
    "mkdocs-awesome-pages-plugin>=2.9.2",
    "mkdocs-git-authors-plugin>=0.7.2",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-bibtex>=2.11.0",
    "mkdocs-macros-plugin>=1.0.4",
    "mkdocs-jupyter>=0.24.5",
    "mkdocs-callouts>=1.9.1",
    "mkdocs-glightbox>=0.3.4",
    "mike>=2.0.0",
    "mkdocs-exclude>=1.0.2",
    "mkdocs-simple-hooks>=0.1.5",
    "pymdown-extensions>=10.7",
    "mkdocs-static-i18n>=1.3.0",
    "nbmake>=1.5.5",
    "nbconvert>=7.16.6",
]

[tool.uv]
package = true

[tool.hatch.metadata]
allow-direct-references = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["abses", "hydra_plugins"]
include = [
    "abses/icons/*.otf",
    "abses/conf/**/*.yaml",
    "abses/conf/*.py",
]

[tool.ruff]
# Ruff configuration
target-version = "py311"
line-length = 88
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "docs",
    "site",
    "tmp",
    "out",
    "logs",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "W293",  # blank line contains whitespace
]

[tool.ruff.lint.isort]
known-first-party = ["abses"]

[tool.interrogate]
# Docstring coverage configuration
ignore-init-method = true
ignore-init-module = true
ignore-magic = true
ignore-private = true
ignore-nested-functions = true
ignore-semiprivate = false
fail-under = 70
exclude = ["setup.py", "docs", "build", "tests", "examples"]
verbose = 1
quiet = false
color = true

[tool.mypy]
# Core settings
# python_version will be detected automatically from the runtime environment
ignore_missing_imports = true
disable_error_code = ["misc", "override", "arg-type", "assignment", "attr-defined", "union-attr", "type-arg"]

# Improved type checking (progressive enhancement)
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = false  # Keep false for flexibility
warn_unreachable = false  # Disable to reduce false positives in control flow
check_untyped_defs = true

# Disallow problematic patterns
disallow_untyped_calls = false  # Keep false for gradual typing
disallow_incomplete_defs = false  # Keep false for backward compatibility

# Enable useful warnings
warn_no_return = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "examples.*",  # Examples use simplified types for clarity
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "abses.core.protocols",
    "abses.core.type_aliases",
]
# Stricter checking for protocol definitions
disallow_any_generics = false  # Keep flexible for now
warn_return_any = false
